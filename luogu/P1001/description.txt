A+B Problem
题目背景
**不熟悉算法竞赛的选手请看这里：** 算法竞赛中要求的输出格式中，**不能有多余的内容**，**这也包括了“请输入整数a和b”这一类的提示用户输入信息的内容**。若包含了这些内容，将会被认为是 `Wrong Answer`，即洛谷上的 `WA`。忽略每一行结尾的空格，以及最后一行之后，多余的换行符。 若因此类问题出现本机（看起来） `AC`，提交 `WA` 的现象，请勿认为是洛谷评测机出了问题，而是你的代码中可能存在多余的输出信息。用户可以参考在题目末尾提供的代码。 另外**请善用应用中的在线IDE功能**，以避免不同平台的评测中所产生的一些问题。 还有一点很重要的是，请不要在对应的题目下面发自己的题解，请发布到题解区域中，否则将处以删除-禁言的处罚。若发现无法提交题解则表明本题题解数量过多。
题目描述
输入两个整数 $a,b$，输出它们的和（$|a|,|b|\leq 10^9$）。 注意 1. Pascal 使用 integer 会爆掉哦！ 2. 有负数哦！ 3. C/C++ 的 main 函数必须是 int 类型，而且最后要 return 0。这不仅对洛谷其他题目有效，而且也是 NOIP/NOI/CSP 比赛的要求！ 好吧，同志们，我们就从这一题开始，向着大牛的路进发。 > 任何一个伟大的思想，都有一个微不足道的开始。
输入输出格式
输入格式

两个整数以空格分开。
输出格式

一个整数。
输入输出样例
输入样例 #1
20 30
输出样例 #1
50
说明
本题各种语言的程序范例： C ```c #include <stdio.h> int main() { int a,b; scanf("%d%d",&a,&b); printf("%d", a+b); return 0; } ``` ---------------- C++ ```cpp #include <iostream> #include <cstdio> using namespace std; int main() { int a,b; cin >> a >> b; cout << a+b; return 0; } ``` ---------------- Pascal ```cpp var a, b: longint; begin readln(a,b); writeln(a+b); end. ``` ----------------- Python2 ```cpp s = raw_input().split() print int(s[0]) + int(s[1]) ``` ----------------- Python3 ```cpp s = input().split() print(int(s[0]) + int(s[1])) ``` ----------------- Java ```java import java.io.*; import java.util.*; public class Main { public static void main(String args[]) throws Exception { Scanner cin=new Scanner(System.in); int a = cin.nextInt(), b = cin.nextInt(); System.out.println(a+b); } } ``` ----------------- JavaScript （Node.js） ```javascript const fs = require('fs') const data = fs.readFileSync('/dev/stdin') const result = data.toString('ascii').trim().split(' ').map(x => parseInt(x)).reduce((a, b) => a + b, 0) console.log(result) process.exit() // 请注意必须在出口点处加入此行 ``` ----------------- Ruby ```ruby a, b = gets.split.map(&:to_i) print a+b ``` ----------------- PHP ```php <?php $input = trim(file_get_contents("php://stdin")); list($a, $b) = explode(' ', $input); echo $a + $b; ``` ----------------- Rust ```rust use std::io; fn main(){ let mut input=String::new(); io::stdin().read_line(&mut input).unwrap(); let mut s=input.trim().split(' '); let a:i32=s.next().unwrap() .parse().unwrap(); let b:i32=s.next().unwrap() .parse().unwrap(); println!("{}",a+b); } ``` ----------------- Go ```go package main import "fmt" func main() { var a, b int fmt.Scanf("%d%d", &a, &b) fmt.Println(a+b) } ``` ----------------- C# Mono ```cs using System; public class APlusB{ private static void Main(){ string[] input = Console.ReadLine().Split(' '); Console.WriteLine(int.Parse(input[0]) + int.Parse(input[1])); } } ``` ------------------ Visual Basic Mono ```vb Imports System Module APlusB Sub Main() Dim ins As String() = Console.ReadLine().Split(New Char(){" "c}) Console.WriteLine(Int(ins(0))+Int(ins(1))) End Sub End Module ``` ------------------ Kotlin ```kotlin fun main(args: Array<String>) { val (a, b) = readLine()!!.split(' ').map(String::toInt) println(a + b) } ``` ------------------ Haskell ```haskell main = do [a, b] <- (map read . words) `fmap` getLine print (a+b) ``` ------------------ Scala ```scala object Main extends App { println(scala.io.StdIn.readLine().split(" ").map(_.toInt).sum) } ``` ------------------ Perl ```perl my $in = <STDIN>; chomp $in; $in = [split /[\s,]+/, $in]; my $c = $in->[0] + $in->[1]; print "$c\n"; ``` ------------------ 文言 ```plaintext 施「require('fs').readFileSync」於「「/dev/stdin」」。名之曰「數據」。 施「(buf => buf.toString().trim())」於「數據」。昔之「數據」者。今其是矣。 施「(s => s.split(' '))」於「數據」。昔之「數據」者。今其是矣。 注曰。「「文言尚菜，無對象之操作，故需 JavaScript 之语法」」。 夫「數據」之一。取一以施「parseInt」。名之曰「甲」。 夫「數據」之二。取一以施「parseInt」。名之曰「乙」。 加「甲」以「乙」。書之。 ```