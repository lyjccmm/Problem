{
    "version": "0.2.0",
    "configurations": [
      {
        "name": "CodeBlocks运行", // 配置名称，将会在启动配置的下拉菜单中显示
        "type": "cppdbg", // 配置类型，这里只能为cppdbg
        "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）
        "program": "D:\\Program Files\\CodeBlocks\\cb_console_runner.exe", // 将要进行调试的程序的路径
        "args": [
            "${workspaceRoot}/${fileBasenameNoExtension}.exe"
        ], // 程序调试时传递给程序的命令行参数，一般设为空即可
        "stopAtEntry": false, // 设为true时程序将暂停在程序入口处，一般设置为false
        "cwd": "${workspaceRoot}", // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
        "environment": [],
        "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台
        "preLaunchTask": "编译c++文件", // 调试会话开始前执行的任务，与tasks.json定义的任务标签相同
      },
      {
        "name": "gdb调试", // 配置名称，将会在启动配置的下拉菜单中显示
        "type": "cppdbg", // 配置类型，这里只能为cppdbg
        "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）
        "program": "${workspaceRoot}/${fileBasenameNoExtension}.exe", // 将要进行调试的程序的路径
        "args": [], // 程序调试时传递给程序的命令行参数，一般设为空即可
        "stopAtEntry": false, // 设为true时程序将暂停在程序入口处，一般设置为false
        "cwd": "${workspaceRoot}", // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
        "environment": [],
        "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台
        "MIMode": "gdb", // MIDebugEngine连接到的控制台程序，这里是gdb
        "miDebuggerPath": "gdb.exe", // 调试程序路径
        "preLaunchTask": "编译c++文件", // 调试会话开始前执行的任务，与tasks.json定义的任务标签相同
      }
    ]
}